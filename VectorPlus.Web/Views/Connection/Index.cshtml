@model ConnectionViewModel

@{
    ViewData["Title"] = "Connection";
}

<div>
    <div class="row">
        <div class="col">

            <div class="card">
                <div class="card-header">Manual configuration</div>

                <div class="card-body">
                    <form method="post" asp-controller="Connection" asp-action="Update">

                        @Html.ValidationSummary(true)

                        <div class="form-group">
                            @Html.LabelFor(model => model.RoboConfig.RobotName, new { /* @class = "control-label" */ })
                            @Html.EditorFor(model => model.RoboConfig.RobotName)
                            <small>eg. Vector-A1B2</small>
                            @Html.ValidationMessageFor(model => model.RoboConfig.RobotName)
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.RoboConfig.RobotSerial, new { @class = "control-label" })
                            @Html.EditorFor(model => model.RoboConfig.RobotSerial)
                            <small>AKA ESN, eg. 009012ab</small>
                            @Html.ValidationMessageFor(model => model.RoboConfig.RobotSerial)
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.RoboConfig.Email, new { @class = "control-label" })
                            @Html.EditorFor(model => model.RoboConfig.Email)
                            @Html.ValidationMessageFor(model => model.RoboConfig.Email)
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.RoboConfig.Password, new { @class = "control-label" })
                            @Html.EditorFor(model => model.RoboConfig.Password)
                            @Html.ValidationMessageFor(model => model.RoboConfig.Password)
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.RoboConfig.IpOverrideStr, new { @class = "control-label" })
                            @Html.EditorFor(model => model.RoboConfig.IpOverrideStr)
                            @Html.ValidationMessageFor(model => model.RoboConfig.IpOverrideStr)
                        </div>

                        <div class="form-group">
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>

                    </form>

                    <form method="post" asp-controller="Connection" asp-action="Remove">
                        <input type="submit" value="Delete" class="btn btn-secondary" />
                    </form>

                </div><!-- card body -->
            </div><!-- card -->
        </div><!-- col -->
        <div class="col">

            <h3>Default behaviour</h3>

            <p>
                If you do not provide any details, but you have previously configured the SDK, VectorPlus will attempt to
                connect using the details already in use by the SDK.
            </p>

            </p>
                If you do not have the SDK installed, or wish to provide your own details, fill out the details here,
                make sure you can see Vector's eyes, and press <b>Save</b>.
            </p>

            <h3>How to check Vector's details</h3>

            <ul>
                <li>Place Vector on the charger and double-click his backpack button.</li>
                <li>Find your robot name on the screen shown (eg. Vector-A1B2).</li>
                <li>Then, raise and lower his arms to see more details.</li>
                <li>Your robot's serial number is listed as ESN. It's 8 digits of letters and numbers (eg. 009012ab). Provide it in lower case.</li>
                <li>Your robot's IP address is also listed there as IP. It's 4 numbers separated by periods (eg. 192.168.42.12). You don't need to provide this, but you can if for any reason VectorPlus cannot find your robot.</li>
                <li>If you see XX.XX.XX.XX on his face, reconnect Vector to your WiFi using the Companion App.</li>
                <li>For email and password, make sure to use the same account that was used to set up your Vector on the companion app.</li>
            </ul>

            <h3>Connecting and troubleshooting</h3>

            <p>
                When you press <b>Save</b>, VectorPlus will attempt to reconnect to your robot with the details you have provided.
                Make sure you can see Vector's eyes before you do.
            </p>

            <p>
                <b>NB. VectorPlus should be running on the same wifi network as your Vector, which should be a 2.4GHz network.</b>
                (Hopefully you breezed through this particular pain point when you first set up Vector and his app.)
            </p>

            <p>
                If you are providing new details, make sure you also have a good connection to the internet.
                VectorPlus connect's to the DDL/Anki servers to retrieve Vector's certificate using the account
                details you provided.
            </p>

        </div><!-- col -->
    </div><!-- row -->
</div>
